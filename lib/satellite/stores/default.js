// Generated by CoffeeScript 1.3.1
(function() {
  var memory,
    _this = this;

  memory = {
    addresses: [],
    targetAddress: null,
    roundRobin: {
      targetAddressIndex: 0
    },
    stickySessions: {
      sessions: {}
    }
  };

  exports.addresses = {
    add: function(address) {
      return memory.addresses.push(address);
    },
    remove: function(address) {
      var index;
      index = memory.addresses.indexOf(address);
      return memory.addresses.splice(index, 1);
    },
    get: function() {
      return memory.addresses;
    }
  };

  exports.targetAddress = function(setValue) {
    if (setValue == null) {
      setValue = void 0;
    }
    if (setValue != null) {
      memory.targetAddress = setValue;
    }
    return memory.targetAddress;
  };

  exports.targetAddressIndex = {
    get: function() {
      return memory.roundRobin.targetAddressIndex;
    },
    increment: function() {
      return memory.roundRobin.targetAddressIndex += 1;
    },
    reset: function() {
      return memory.roundRobin.targetAddressIndex = 0;
    }
  };

  exports.stickySessions = {
    get: function(key) {
      var items;
      if (key == null) {
        key = null;
      }
      items = memory.stickySessions.sessions;
      if (key != null) {
        return items[key];
      } else {
        return items;
      }
    },
    set: function(key, value) {
      return memory.stickySessions.sessions[key] = value;
    },
    "delete": function(key) {
      return delete memory.stickySessions.sessions[key];
    }
  };

}).call(this);
